// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: frequencies.capnp

#include "frequencies.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<75> b_ec0b183738c8b109 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
      9, 177, 200,  56,  55,  24,  11, 236,
     18,   0,   0,   0,   1,   0,   0,   0,
    160, 254, 190,  60, 231, 219, 124, 240,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     22,   0,   0,   0, 205,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 113, 117, 101, 110,  99,
    105, 101, 115,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 114, 115, 101,
    116,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    245, 225,  83, 227,  45, 230, 237, 221,
      1,   0,   0,   0,  42,   0,   0,   0,
     80,  97, 105, 114,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     88,   0,   0,   0,   3,   0,   1,   0,
    116,   0,   0,   0,   2,   0,   1,   0,
     99, 104,  97, 114, 115, 101, 116,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 111, 114, 100, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    245, 225,  83, 227,  45, 230, 237, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    245, 225,  83, 227,  45, 230, 237, 221,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ec0b183738c8b109 = b_ec0b183738c8b109.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ec0b183738c8b109[] = {
  &s_ddede62de353e1f5,
};
static const uint16_t m_ec0b183738c8b109[] = {2, 0, 1};
static const uint16_t i_ec0b183738c8b109[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ec0b183738c8b109 = {
  0xec0b183738c8b109, b_ec0b183738c8b109.words, 75, d_ec0b183738c8b109, m_ec0b183738c8b109,
  1, 3, i_ec0b183738c8b109, nullptr, nullptr, { &s_ec0b183738c8b109, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<42> b_ddede62de353e1f5 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    245, 225,  83, 227,  45, 230, 237, 221,
     26,   0,   0,   0,   1,   0,   2,   0,
      9, 177, 200,  56,  55,  24,  11, 236,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    110,   0,   0,   0, 203,   0,   0,   0,
     21,   0,   0,   0, 250,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 113, 117, 101, 110,  99,
    105, 101, 115,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 114, 115, 101,
    116,  46,  80,  97, 105, 114,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    238, 221, 129,  92,  64,  33, 169, 206,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     17,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     24,   0,   0,   0,   2,   0,   1,   0,
    116, 121, 112, 101,   0,   0,   0,   0,
     99, 111, 117, 110, 116,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ddede62de353e1f5 = b_ddede62de353e1f5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ddede62de353e1f5[] = {
  &s_cea921405c81ddee,
};
static const uint16_t m_ddede62de353e1f5[] = {1, 0};
static const uint16_t i_ddede62de353e1f5[] = {0, 1};
const ::capnp::_::RawSchema s_ddede62de353e1f5 = {
  0xddede62de353e1f5, b_ddede62de353e1f5.words, 42, d_ddede62de353e1f5, m_ddede62de353e1f5,
  1, 2, i_ddede62de353e1f5, nullptr, nullptr, { &s_ddede62de353e1f5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_cea921405c81ddee = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    238, 221, 129,  92,  64,  33, 169, 206,
     31,   0,   0,   0,   1,   0,   2,   0,
    245, 225,  83, 227,  45, 230, 237, 221,
      1,   0,   7,   0,   1,   0,   2,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 113, 117, 101, 110,  99,
    105, 101, 115,  46,  99,  97, 112, 110,
    112,  58,  67, 104,  97, 114, 115, 101,
    116,  46,  80,  97, 105, 114,  46, 116,
    121, 112, 101,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,   2,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    119, 111, 114, 100,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 121, 116, 101,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cea921405c81ddee = b_cea921405c81ddee.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cea921405c81ddee[] = {
  &s_ddede62de353e1f5,
};
static const uint16_t m_cea921405c81ddee[] = {1, 0};
static const uint16_t i_cea921405c81ddee[] = {0, 1};
const ::capnp::_::RawSchema s_cea921405c81ddee = {
  0xcea921405c81ddee, b_cea921405c81ddee.words, 49, d_cea921405c81ddee, m_cea921405c81ddee,
  1, 2, i_cea921405c81ddee, nullptr, nullptr, { &s_cea921405c81ddee, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<54> b_f4318655ad6122d5 = {
  {   0,   0,   0,   0,   6,   0,   6,   0,
    213,  34,  97, 173,  85, 134,  49, 244,
     18,   0,   0,   0,   1,   0,   1,   0,
    160, 254, 190,  60, 231, 219, 124, 240,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    207,   0,   0,   0,  28,   1,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 101, 113, 117, 101, 110,  99,
    105, 101, 115,  46,  99,  97, 112, 110,
    112,  58,  70, 114, 101, 113, 117, 101,
    110,  99, 105, 101, 115,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     44,   0,   0,   0,   3,   0,   1,   0,
     72,   0,   0,   0,   2,   0,   1,   0,
    118, 101, 114, 115, 105, 111, 110,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 104,  97, 114, 115, 101, 116, 115,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      9, 177, 200,  56,  55,  24,  11, 236,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f4318655ad6122d5 = b_f4318655ad6122d5.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f4318655ad6122d5[] = {
  &s_ec0b183738c8b109,
};
static const uint16_t m_f4318655ad6122d5[] = {1, 0};
static const uint16_t i_f4318655ad6122d5[] = {0, 1};
const ::capnp::_::RawSchema s_f4318655ad6122d5 = {
  0xf4318655ad6122d5, b_f4318655ad6122d5.words, 54, d_f4318655ad6122d5, m_f4318655ad6122d5,
  1, 2, i_f4318655ad6122d5, nullptr, nullptr, { &s_f4318655ad6122d5, nullptr, nullptr, 0, 0, nullptr }, false
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// Charset
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Charset::_capnpPrivate::dataWordSize;
constexpr uint16_t Charset::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Charset::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Charset::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Charset::Pair
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Charset::Pair::_capnpPrivate::dataWordSize;
constexpr uint16_t Charset::Pair::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Charset::Pair::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Charset::Pair::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Charset::Pair::Type
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Charset::Pair::Type::_capnpPrivate::dataWordSize;
constexpr uint16_t Charset::Pair::Type::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Charset::Pair::Type::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Charset::Pair::Type::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE

// Frequencies
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr uint16_t Frequencies::_capnpPrivate::dataWordSize;
constexpr uint16_t Frequencies::_capnpPrivate::pointerCount;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#if !CAPNP_LITE
#if CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
constexpr ::capnp::Kind Frequencies::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Frequencies::_capnpPrivate::schema;
#endif  // !CAPNP_NEED_REDUNDANT_CONSTEXPR_DECL
#endif  // !CAPNP_LITE



